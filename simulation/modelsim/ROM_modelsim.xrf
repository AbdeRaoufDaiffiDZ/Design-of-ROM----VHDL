vendor_name = ModelSim
source_file = 1, D:/VHDL/design of a rom/rom.vhd
source_file = 1, D:/VHDL/design of a rom/Waveform.vwf
source_file = 1, D:/VHDL/design of a rom/db/ROM.cbx.xml
source_file = 1, c:/altera/13.0sp1/quartus/libraries/vhdl/ieee/prmtvs_b.vhd
source_file = 1, c:/altera/13.0sp1/quartus/libraries/vhdl/ieee/prmtvs_p.vhd
source_file = 1, c:/altera/13.0sp1/quartus/libraries/vhdl/ieee/timing_b.vhd
source_file = 1, c:/altera/13.0sp1/quartus/libraries/vhdl/ieee/timing_p.vhd
design_name = ROM
instance = comp, \clk~I , clk, ROM, 1
instance = comp, \clk~clkctrl , clk~clkctrl, ROM, 1
instance = comp, \Data_out[0]~enfeeder , Data_out[0]~enfeeder, ROM, 1
instance = comp, \RD~I , RD, ROM, 1
instance = comp, \RD~clkctrl , RD~clkctrl, ROM, 1
instance = comp, \Data_out[0]~en , Data_out[0]~en, ROM, 1
instance = comp, \addr[0]~I , addr[0], ROM, 1
instance = comp, \addr[1]~I , addr[1], ROM, 1
instance = comp, \Mux1~0 , Mux1~0, ROM, 1
instance = comp, \Data_out[1]~reg0 , Data_out[1]~reg0, ROM, 1
instance = comp, \Data_out[1]~enfeeder , Data_out[1]~enfeeder, ROM, 1
instance = comp, \Data_out[1]~en , Data_out[1]~en, ROM, 1
instance = comp, \Data_out[2]~8 , Data_out[2]~8, ROM, 1
instance = comp, \Data_out[2]~reg0 , Data_out[2]~reg0, ROM, 1
instance = comp, \Data_out[2]~enfeeder , Data_out[2]~enfeeder, ROM, 1
instance = comp, \Data_out[2]~en , Data_out[2]~en, ROM, 1
instance = comp, \Mux0~0 , Mux0~0, ROM, 1
instance = comp, \Data_out[3]~reg0 , Data_out[3]~reg0, ROM, 1
instance = comp, \Data_out[3]~enfeeder , Data_out[3]~enfeeder, ROM, 1
instance = comp, \Data_out[3]~en , Data_out[3]~en, ROM, 1
instance = comp, \Data_out[4]~reg0feeder , Data_out[4]~reg0feeder, ROM, 1
instance = comp, \Data_out[4]~reg0 , Data_out[4]~reg0, ROM, 1
instance = comp, \Data_out[4]~enfeeder , Data_out[4]~enfeeder, ROM, 1
instance = comp, \Data_out[4]~en , Data_out[4]~en, ROM, 1
instance = comp, \Data_out[5]~enfeeder , Data_out[5]~enfeeder, ROM, 1
instance = comp, \Data_out[5]~en , Data_out[5]~en, ROM, 1
instance = comp, \Data_out[6]~reg0feeder , Data_out[6]~reg0feeder, ROM, 1
instance = comp, \Data_out[6]~reg0 , Data_out[6]~reg0, ROM, 1
instance = comp, \Data_out[6]~enfeeder , Data_out[6]~enfeeder, ROM, 1
instance = comp, \Data_out[6]~en , Data_out[6]~en, ROM, 1
instance = comp, \Data_out[7]~enfeeder , Data_out[7]~enfeeder, ROM, 1
instance = comp, \Data_out[7]~en , Data_out[7]~en, ROM, 1
instance = comp, \Data_out[0]~I , Data_out[0], ROM, 1
instance = comp, \Data_out[1]~I , Data_out[1], ROM, 1
instance = comp, \Data_out[2]~I , Data_out[2], ROM, 1
instance = comp, \Data_out[3]~I , Data_out[3], ROM, 1
instance = comp, \Data_out[4]~I , Data_out[4], ROM, 1
instance = comp, \Data_out[5]~I , Data_out[5], ROM, 1
instance = comp, \Data_out[6]~I , Data_out[6], ROM, 1
instance = comp, \Data_out[7]~I , Data_out[7], ROM, 1
